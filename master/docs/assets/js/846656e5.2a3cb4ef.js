"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9492],{8332:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=n(4848),r=n(8453);const s={sidebar_position:35},a="Glossary",l={id:"reference/glossary",title:"Glossary",description:"address",source:"@site/docs/reference/glossary.md",sourceDirName:"reference",slug:"/reference/glossary",permalink:"/plutus/master/docs/reference/glossary",draft:!1,unlisted:!1,editUrl:"https://github.com/IntersectMBO/plutus/edit/master/docusaurus/docs/reference/glossary.md",tags:[],version:"current",sidebarPosition:35,frontMatter:{sidebar_position:35},sidebar:"tutorialSidebar",previous:{title:"Cost model parameters",permalink:"/plutus/master/docs/reference/cost-model-parameters"},next:{title:"Further resources",permalink:"/plutus/master/docs/reference/further-resources"}},o={},c=[{value:"address",id:"address",level:3},{value:"Cardano",id:"cardano",level:3},{value:"currency",id:"currency",level:3},{value:"datum",id:"datum",level:3},{value:"Extended UTXO Model",id:"extended-utxo-model",level:3},{value:"minting",id:"minting",level:3},{value:"minting policy script",id:"minting-policy-script",level:3},{value:"Hydra",id:"hydra",level:3},{value:"distributed ledger",id:"distributed-ledger",level:3},{value:"ledger",id:"ledger",level:3},{value:"Marlowe",id:"marlowe",level:3},{value:"multi-asset",id:"multi-asset",level:3},{value:"off-chain code",id:"off-chain-code",level:3},{value:"on-chain code",id:"on-chain-code",level:3},{value:"Plutus Core",id:"plutus-core",level:3},{value:"Plutus IR",id:"plutus-ir",level:3},{value:"Plutus Platform",id:"plutus-platform",level:3},{value:"Plutus Tx",id:"plutus-tx",level:3},{value:"redeemer",id:"redeemer",level:3},{value:"rollback",id:"rollback",level:3},{value:"script",id:"script",level:3},{value:"script context",id:"script-context",level:3},{value:"script output",id:"script-output",level:3},{value:"token",id:"token",level:3},{value:"transaction output",id:"transaction-output",level:3},{value:"UTXO",id:"utxo",level:3},{value:"utxo congestion",id:"utxo-congestion",level:3},{value:"validator script",id:"validator-script",level:3}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"glossary",children:"Glossary"}),"\n",(0,i.jsx)(t.h3,{id:"address",children:"address"}),"\n",(0,i.jsx)(t.p,{children:'The address of an UTXO says where the output is "going".\nThe address stipulates the conditions for unlocking the output.\nThis can be a public key hash, or (in the Extended UTXO model) a script hash.'}),"\n",(0,i.jsx)(t.h3,{id:"cardano",children:"Cardano"}),"\n",(0,i.jsx)(t.p,{children:"The blockchain system upon which the Plutus Platform is built."}),"\n",(0,i.jsx)(t.h3,{id:"currency",children:"currency"}),"\n",(0,i.jsxs)(t.p,{children:["A class of token whose minting is controlled by a particular monetary policy script.\nOn the Cardano ledger there is a special currency called ",(0,i.jsx)(t.code,{children:"ada"})," which can never be minted and which is controlled separately."]}),"\n",(0,i.jsx)(t.h3,{id:"datum",children:"datum"}),"\n",(0,i.jsx)(t.p,{children:"The data field on script outputs in the Extended UTXO model."}),"\n",(0,i.jsx)(t.h3,{id:"extended-utxo-model",children:"Extended UTXO Model"}),"\n",(0,i.jsx)(t.p,{children:"The ledger model which the Plutus Platform relies on.\nThis is implemented in the Alonzo hard fork of the Cardano blockchain."}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["See ",(0,i.jsx)(t.a,{href:"/plutus/master/docs/essential-concepts/ledger",children:"Ledgers"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"minting",children:"minting"}),"\n",(0,i.jsx)(t.p,{children:"A transaction which mints tokens creates new tokens, providing that the corresponding minting policy script is satisfied.\nThe amount minted can be negative, in which case the tokens will be destroyed instead of created."}),"\n",(0,i.jsx)(t.h3,{id:"minting-policy-script",children:"minting policy script"}),"\n",(0,i.jsx)(t.p,{children:"A script which must be satisfied in order for a transaction to mint tokens of the corresponding currency."}),"\n",(0,i.jsx)(t.h3,{id:"hydra",children:"Hydra"}),"\n",(0,i.jsx)(t.p,{children:"A Layer 2 scalability solution for Cardano."}),"\n",(0,i.jsx)(t.p,{children:"For a detailed technical report, please see:"}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["Manuel M. T. Chakravarty, Sandro Coretti, Matthias Fitzi, Peter Gazi, Philipp Kant, Aggelos Kiayias, and Alexander Russell. ",(0,i.jsx)(t.a,{href:"https://eprint.iacr.org/2020/299",children:"Hydra: Fast Isomorphic State Channels. Technical Report, Cryptology ePrint Archive, Report 2020/299, 2020"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"distributed-ledger",children:"distributed ledger"}),"\n",(0,i.jsx)(t.h3,{id:"ledger",children:"ledger"}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["See ",(0,i.jsx)(t.a,{href:"/plutus/master/docs/essential-concepts/ledger",children:"Ledgers"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"marlowe",children:"Marlowe"}),"\n",(0,i.jsx)(t.p,{children:"A domain-specific language for writing financial contract applications."}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["See ",(0,i.jsx)(t.a,{href:"https://docs.marlowe.iohk.io/docs/introduction",children:"Marlowe documentation"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"multi-asset",children:"multi-asset"}),"\n",(0,i.jsx)(t.p,{children:"A generic term for a ledger which supports multiple different asset types natively."}),"\n",(0,i.jsx)(t.h3,{id:"off-chain-code",children:"off-chain code"}),"\n",(0,i.jsx)(t.p,{children:"The part of a contract application\u2019s code which runs off the chain, usually as a contract application."}),"\n",(0,i.jsx)(t.h3,{id:"on-chain-code",children:"on-chain code"}),"\n",(0,i.jsx)(t.p,{children:"The part of a contract application\u2019s code which runs on the chain (i.e. as scripts)."}),"\n",(0,i.jsx)(t.h3,{id:"plutus-core",children:"Plutus Core"}),"\n",(0,i.jsx)(t.p,{children:'Plutus Core is our "assembly language."\nIt is a low-level language based on higher-order polymorphic lambda calculus, a well-studied formalism for computing.\nUsing the lambda calculus makes it an easy compilation target for functional programming languages, and allows us to have a simple, formally verified evaluator.'}),"\n",(0,i.jsx)(t.p,{children:"Plutus Core is the code that runs on-chain, i.e., by every node validating the transaction, using an interpreter known as the CEK machine.\nA Plutus Core program included in a Cardano transaction is often referred to as Plutus script or Plutus validator."}),"\n",(0,i.jsx)(t.p,{children:"Plutus Core is designed for simplicity, determinism, and to allow careful cost control of program execution."}),"\n",(0,i.jsx)(t.h3,{id:"plutus-ir",children:"Plutus IR"}),"\n",(0,i.jsx)(t.p,{children:"An intermediate language that compiles to Plutus Core.\nPlutus IR is not used by users, but rather as a compilation target on the way to Plutus Core.\nHowever, it is significantly more human-readable than Plutus Core, so should be preferred in cases where humans may want to inspect the program."}),"\n",(0,i.jsx)(t.h3,{id:"plutus-platform",children:"Plutus Platform"}),"\n",(0,i.jsx)(t.p,{children:"The combined software support for writing contract applications, including:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Plutus foundation, and"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Plutus application framework"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Please see:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/plutus/master/docs/essential-concepts/plutus-platform",children:"Plutus platform"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/plutus/master/docs/essential-concepts/plutus-foundation",children:"Plutus foundation"})}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"plutus-tx",children:"Plutus Tx"}),"\n",(0,i.jsx)(t.p,{children:"Plutus Tx is a high-level language for writing the validation logic of a smart contract, the logic that determines whether a transaction is allowed to spend a UTXO. Plutus Tx is not a new language, but rather a subset of Haskell, and it is compiled into Plutus Core, a low-level language based on higher-order polymorphic lambda calculus. Plutus Core is the code that runs on-chain, i.e., by every node validating the transaction, using an interpreter known as the CEK machine."}),"\n",(0,i.jsx)(t.p,{children:"Plutus Tx is also the libraries and compiler for compiling Haskell into Plutus Core to form the on-chain part of a contract application."}),"\n",(0,i.jsx)(t.h3,{id:"redeemer",children:"redeemer"}),"\n",(0,i.jsx)(t.p,{children:"The argument to the validator script which is provided by the transaction which spends a script output."}),"\n",(0,i.jsx)(t.h3,{id:"rollback",children:"rollback"}),"\n",(0,i.jsx)(t.p,{children:"The result of the local node switching to the consensus chain."}),"\n",(0,i.jsx)(t.h3,{id:"script",children:"script"}),"\n",(0,i.jsx)(t.p,{children:"A generic term for an executable program used in the ledger.\nIn the Cardano blockchain, these are written in Plutus Core."}),"\n",(0,i.jsx)(t.h3,{id:"script-context",children:"script context"}),"\n",(0,i.jsx)(t.p,{children:"A data structure containing a summary of the transaction being validated, as well as a way of identifying the current script being run."}),"\n",(0,i.jsx)(t.h3,{id:"script-output",children:"script output"}),"\n",(0,i.jsx)(t.p,{children:"A UTXO locked by a script."}),"\n",(0,i.jsx)(t.h3,{id:"token",children:"token"}),"\n",(0,i.jsx)(t.p,{children:"A generic term for a native tradeable asset in the ledger."}),"\n",(0,i.jsx)(t.h3,{id:"transaction-output",children:"transaction output"}),"\n",(0,i.jsx)(t.p,{children:"Outputs produced by transactions.\nThey are consumed when they are spent by another transaction.\nTypically, some kind of evidence is required to be able to spend a UTXO, such as a signature from a public key, or (in the Extended UTXO Model) satisfying a script."}),"\n",(0,i.jsx)(t.h3,{id:"utxo",children:"UTXO"}),"\n",(0,i.jsxs)(t.p,{children:["An unspent ",(0,i.jsx)(t.a,{href:"/plutus/master/docs/reference/glossary#transaction-output",children:"transaction output"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"utxo-congestion",children:"utxo congestion"}),"\n",(0,i.jsxs)(t.p,{children:["The effect of multiple transactions attempting to spend the same ",(0,i.jsx)(t.a,{href:"/plutus/master/docs/reference/glossary#transaction-output",children:"transaction output"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"validator-script",children:"validator script"}),"\n",(0,i.jsx)(t.p,{children:"The script attached to a script output in the Extended UTXO model.\nMust be run and return positively in order for the output to be spent.\nDetermines the address of the output."})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var i=n(6540);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);