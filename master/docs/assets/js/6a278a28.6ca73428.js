"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4774],{7168:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var s=i(4848),n=i(8453);const o={sidebar_position:10},r="ADR 1: Record architectural decisions",a={id:"adr/adr1",title:"ADR 1: Record architectural decisions",description:"Date: 2022-06-08",source:"@site/docs/adr/adr1.md",sourceDirName:"adr",slug:"/adr/adr1",permalink:"/plutus/master/docs/adr/adr1",draft:!1,unlisted:!1,editUrl:"https://github.com/IntersectMBO/plutus/edit/master/docusaurus/docs/adr/adr1.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Architectural decision records",permalink:"/plutus/master/docs/adr/adr-index"},next:{title:"ADR 2: Steppable CEK machine",permalink:"/plutus/master/docs/adr/adr2"}},c={},l=[{value:"Authors",id:"authors",level:2},{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Implications",id:"implications",level:2},{value:"ADR template",id:"adr-template",level:2},{value:"Title",id:"title",level:3},{value:"Authors",id:"authors-1",level:3},{value:"Status",id:"status-1",level:3},{value:"Issue (or context)",id:"issue-or-context",level:3},{value:"Decision",id:"decision-1",level:3},{value:"Tags",id:"tags",level:3},{value:"Assumptions",id:"assumptions",level:3},{value:"Argument",id:"argument",level:3},{value:"Alternatives",id:"alternatives",level:3},{value:"Implications (or consequences)",id:"implications-or-consequences",level:3},{value:"Related decisions",id:"related-decisions",level:3},{value:"Related requirements",id:"related-requirements",level:3},{value:"Affected artifacts",id:"affected-artifacts",level:3},{value:"Notes",id:"notes",level:3}];function d(e){const t={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"adr-1-record-architectural-decisions",children:"ADR 1: Record architectural decisions"}),"\n",(0,s.jsx)(t.p,{children:"Date: 2022-06-08"}),"\n",(0,s.jsx)(t.h2,{id:"authors",children:"Authors"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"mailto:konstantinos.lambrou@iohk.io",children:"koslambrou"})}),"\n",(0,s.jsx)(t.h2,{id:"status",children:"Status"}),"\n",(0,s.jsx)(t.p,{children:"Accepted"}),"\n",(0,s.jsx)(t.h2,{id:"context",children:"Context"}),"\n",(0,s.jsx)(t.p,{children:"We are in search for a means to document our architectural and design decisions for all of our components.\nTo do that, there is a practice called architectural decision records (ADR) that we can\nintegrate into our workflow."}),"\n",(0,s.jsx)(t.p,{children:"This does not replace actual architecture documentation, but provides people who are contributing with:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"the means to understand architectural and design decisions that were made"}),"\n",(0,s.jsx)(t.li,{children:"a framework for proposing changes to the current architecture."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"For each decision, it is important to consider the following factors:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"what we have decided to do"}),"\n",(0,s.jsx)(t.li,{children:"why we have made this decision"}),"\n",(0,s.jsx)(t.li,{children:"what we expect the impact of this decision to be"}),"\n",(0,s.jsx)(t.li,{children:"what we have learned in the process."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"decision",children:"Decision"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"We will use ADRs to document, propose, and discuss any important or significant architectural and design decisions."}),"\n",(0,s.jsxs)(t.li,{children:["The ADR format will follow the format described in the ",(0,s.jsx)(t.a,{href:"#implications",children:"Implications"})," section."]}),"\n",(0,s.jsxs)(t.li,{children:["We will follow the convention of storing those ADRs as rST or Markdown formatted documents stored under the [docs/adr] directory, as exemplified in Nat Pryce's ",(0,s.jsx)(t.a,{href:"https://github.com/npryce/adr-tools",children:"adr-tools"}),".\nThis does not imply that we will be using [adr-tools] itself, as we might diverge from the proposed structure."]}),"\n",(0,s.jsx)(t.li,{children:"We will keep rejected ADRs."}),"\n",(0,s.jsx)(t.li,{children:"We will strive, if possible, to create an ADR as early as possible in relation to the actual implementation."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"implications",children:"Implications"}),"\n",(0,s.jsxs)(t.p,{children:["ADRs should be written using the template described in the ",(0,s.jsx)(t.a,{href:"#adr-template",children:"ADR template"})," which comes from Chapter 6.5.2 (",(0,s.jsx)(t.em,{children:"A Template for Documenting Architectural Decisions"}),") of ",(0,s.jsx)(t.em,{children:"Documenting Software Architectures: Views and Beyond (2nd Edition)"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["However, the mandatory sections are ",(0,s.jsx)(t.em,{children:"Title"}),", ",(0,s.jsx)(t.em,{children:"Status"}),", ",(0,s.jsx)(t.em,{children:"Issue/Context"}),", ",(0,s.jsx)(t.em,{children:"Decision"}),", ",(0,s.jsx)(t.em,{children:"Implications/Consequences"}),". The rest are optional."]}),"\n",(0,s.jsxs)(t.p,{children:["Another good reference is the article ",(0,s.jsx)(t.a,{href:"https://cognitect.com/blog/2011/11/15/documenting-architecture-decisions",children:"Architecture Decision Records"})," by Michael Nygard (Nov. 15, 2011)."]}),"\n",(0,s.jsx)(t.h2,{id:"adr-template",children:"ADR template"}),"\n",(0,s.jsx)(t.p,{children:"What follows is the ADR format (adapted from the book)."}),"\n",(0,s.jsx)(t.h3,{id:"title",children:"Title"}),"\n",(0,s.jsx)(t.p,{children:"These documents have names that are short noun phrases."}),"\n",(0,s.jsx)(t.p,{children:"For example, 'ADR 1: Deployment on Ruby on Rails 3.0.10' or 'ADR 9: LDAP for Multitenant Integration.'"}),"\n",(0,s.jsx)(t.h3,{id:"authors-1",children:"Authors"}),"\n",(0,s.jsx)(t.p,{children:"List each author\u2019s name and email."}),"\n",(0,s.jsx)(t.h3,{id:"status-1",children:"Status"}),"\n",(0,s.jsx)(t.p,{children:"State the status of the decision, such as 'draft' if the decision is still being written, as 'proposed' if the project stakeholders haven\u2019t agreed with it yet, or 'accepted' once it is agreed. If a later ADR changes or reverses a decision, it may be marked as 'deprecated' or 'superseded' with a reference to its replacement. (This is not the status of implementing the decision.)"}),"\n",(0,s.jsx)(t.h3,{id:"issue-or-context",children:"Issue (or context)"}),"\n",(0,s.jsx)(t.p,{children:"This section describes the architectural design issue being addressed. This description should leave no questions as to why this issue needs to be addressed now. The language in this section is value-neutral. It is simply describing facts."}),"\n",(0,s.jsx)(t.h3,{id:"decision-1",children:"Decision"}),"\n",(0,s.jsx)(t.p,{children:"Clearly state the solution chosen. It is the selection of one of the positions that the architect could have taken. It is stated in full sentences, with active voice. 'We will \u2026'"}),"\n",(0,s.jsx)(t.h3,{id:"tags",children:"Tags"}),"\n",(0,s.jsx)(t.p,{children:"Add one or more tags to the decision. Useful for organizing the set of decision."}),"\n",(0,s.jsx)(t.h3,{id:"assumptions",children:"Assumptions"}),"\n",(0,s.jsx)(t.p,{children:"Clearly describe the underlying assumptions in the environment in which a decision is being made. These could be cost, schedule, technology, and so on. Note that constraints in the environment (such as a list of accepted technology standards, an enterprise architecture, or commonly employed patterns) may limit the set of alternatives considered."}),"\n",(0,s.jsx)(t.h3,{id:"argument",children:"Argument"}),"\n",(0,s.jsx)(t.p,{children:"Outline why a position was selected. This is probably as important as the decision itself. The argument for a decision can include items such as implementation cost, total cost of ownership, time to market, and availability of required development resources."}),"\n",(0,s.jsx)(t.h3,{id:"alternatives",children:"Alternatives"}),"\n",(0,s.jsx)(t.p,{children:"List alternatives (that is, options or positions) considered."}),"\n",(0,s.jsx)(t.p,{children:"Explain alternatives with sufficient detail to judge their suitability; refer to external documentation if necessary. Only viable positions should be described here. While you don\u2019t need an exhaustive list, you also don\u2019t want to hear the question 'Did you think about\u2026 ?' during a final review, which might lead to a loss of credibility and a questioning of other architectural decisions. Listing alternatives espoused by others also helps them know their opinions were heard. Finally, listing alternatives helps the architect make the right decision, because listing alternatives cannot be done unless those alternatives were given due consideration."}),"\n",(0,s.jsx)(t.h3,{id:"implications-or-consequences",children:"Implications (or consequences)"}),"\n",(0,s.jsx)(t.p,{children:"Describe the decision\u2019s implications. For example, it may:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Introduce a need to make other decisions"}),"\n",(0,s.jsx)(t.li,{children:"Create new requirements"}),"\n",(0,s.jsx)(t.li,{children:"Modify existing requirements"}),"\n",(0,s.jsx)(t.li,{children:"Pose additional constraints to the environment"}),"\n",(0,s.jsx)(t.li,{children:"Require renegotiation of scope"}),"\n",(0,s.jsx)(t.li,{children:"Require renegotiation of the schedule with the customers"}),"\n",(0,s.jsx)(t.li,{children:"Require additional training for the staff."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Clearly understanding and stating the implications of the decisions has been a very effective tool in gaining buy-in. All consequences should be listed here, not just the 'positive' ones. A particular decision may have positive, negative, and neutral consequences, but all of them affect the team and project in the future."}),"\n",(0,s.jsx)(t.h3,{id:"related-decisions",children:"Related decisions"}),"\n",(0,s.jsx)(t.p,{children:"List decisions related to this one. Useful relations among decisions include causality (which decisions caused other ones), structure (showing decisions\u2019 parents or children, corresponding to architecture elements at higher or lower levels), or temporality (which decisions came before or after others)."}),"\n",(0,s.jsx)(t.h3,{id:"related-requirements",children:"Related requirements"}),"\n",(0,s.jsx)(t.p,{children:"Map decisions to objectives or requirements, to show accountability. Each architecture decision is assessed as to its contribution to each major objective. We can then assess how well the objective is met across all decisions, as part of an overall architecture evaluation."}),"\n",(0,s.jsx)(t.h3,{id:"affected-artifacts",children:"Affected artifacts"}),"\n",(0,s.jsx)(t.p,{children:"List the architecture elements and/or relations affected by this decision. You might also list the effects on other design or scope decisions, pointing to the documents where those decisions are described. You might also include external artifacts upstream and downstream of the architecture, as well as management artifacts such as budgets and schedules."}),"\n",(0,s.jsx)(t.h3,{id:"notes",children:"Notes"}),"\n",(0,s.jsx)(t.p,{children:"Capture notes and issues that are discussed during the decision process. They can be links to a external document, a PR, a Github issue, etc."})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var s=i(6540);const n={},o=s.createContext(n);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);